# Task ID: 8
# Title: 캐시된 YouTube 데이터를 제공하는 백엔드 API 엔드포인트 개발 (Develop API Endpoint for Cached YouTube Data)
# Status: pending
# Dependencies: 7
# Priority: high
# Description: 프론트엔드에서 사용할 수 있도록, 서버에 캐시된 YouTube 영상 목록을 제공하는 내부 API 엔드포인트를 개발합니다.
# Details:
예를 들어 `/api/videos?playlistId=...`와 같은 요청에 대해, 사전에 캐시된 해당 재생목록의 영상 데이터(JSON 형식)를 응답으로 반환하는 엔드포인트를 구현합니다.

# Test Strategy:
API 클라이언트(예: Postman)를 사용하여 엔드포인트를 호출하고, 각 재생목록에 대해 예상된 JSON 데이터 구조와 내용이 정확하게 반환되는지 확인합니다.

# Subtasks:
## 1. API 라우트 및 기본 컨트롤러 설정 (Setup API Route and Basic Controller) [pending]
### Dependencies: None
### Description: 백엔드 프레임워크(예: Express.js)를 사용하여 `/api/videos` 엔드포인트에 대한 라우트를 정의하고, 들어오는 요청을 처리할 기본 컨트롤러 함수 구조를 생성합니다.
### Details:
GET 메서드 요청을 처리하도록 라우터를 설정합니다. 컨트롤러 함수는 요청(request)과 응답(response) 객체를 인자로 받아야 합니다.

## 2. 요청 쿼리 파라미터(playlistId) 처리 및 유효성 검사 (Handle and Validate Request Query Parameter) [pending]
### Dependencies: 8.1
### Description: 컨트롤러 내에서 요청 URL의 쿼리 파라미터로부터 `playlistId` 값을 추출하고, 해당 값이 비어있거나 유효하지 않은 경우 400 Bad Request 에러를 반환하는 로직을 구현합니다.
### Details:
`playlistId`가 없는 경우와, 사전에 정의된 3개의 재생목록 ID 중 하나가 아닌 경우를 모두 에러로 처리합니다.

## 3. 캐시된 데이터 조회 로직 구현 (Implement Cached Data Retrieval Logic) [pending]
### Dependencies: 8.2
### Description: 유효성이 검증된 `playlistId`를 키(key)로 사용하여, Task 7에서 구축한 캐싱 시스템(파일 또는 DB)에서 해당 재생목록의 영상 데이터를 조회하는 기능을 구현합니다.
### Details:
캐시된 데이터가 JSON 파일 형태라면, `playlistId`를 파일명으로 사용하여 해당 파일을 읽어옵니다. 데이터베이스라면 `playlistId`를 조건으로 쿼리합니다.

## 4. 데이터 조회 실패 및 예외 처리 (Handle Data Retrieval Failures and Exceptions) [pending]
### Dependencies: 8.3
### Description: 요청된 `playlistId`에 해당하는 캐시 데이터가 존재하지 않거나, 파일 읽기/DB 조회 중 오류가 발생했을 때를 대비한 예외 처리 로직을 추가합니다.
### Details:
데이터가 없는 경우 404 Not Found를, 그 외 시스템 오류의 경우 500 Internal Server Error를 명확한 에러 메시지와 함께 반환하도록 구현합니다.

## 5. 성공 응답(JSON) 형식화 및 반환 (Format and Return Successful JSON Response) [pending]
### Dependencies: 8.3
### Description: 성공적으로 조회한 캐시 데이터를 클라이언트(프론트엔드)가 사용하기 용이한 JSON 형식으로 구성하고, HTTP 200 OK 상태 코드와 함께 응답 본문에 담아 최종 반환합니다.
### Details:
응답 헤더의 `Content-Type`을 `application/json`으로 설정하고, 조회된 데이터를 JSON 문자열로 변환하여 응답합니다.

## 6. GET /api/youtube-videos 엔드포인트 구현 [pending]
### Dependencies: None
### Description: Express.js 기반으로 GET /api/youtube-videos?playlistId=... 엔드포인트를 구현합니다.
### Details:


## 7. YouTube Data API 연동 및 데이터 캐싱 로직 구현 [pending]
### Dependencies: None
### Description: YouTube Data API를 호출하여 영상 데이터를 가져오고, youtube_videos_cache 테이블에 캐싱하는 로직을 구현합니다. 이때 position 컬럼도 함께 저장합니다.
### Details:


## 8. 백엔드 server.js 파일 수정 및 YouTube API 연동 [pending]
### Dependencies: None
### Description: /var/www/html/project/mev_home-backend/server.js 파일을 수정하여 YouTube API를 통해 원하는 재생목록의 값을 받아오고, 이를 seongrim 프로젝트와 통신하도록 구현합니다.
### Details:


